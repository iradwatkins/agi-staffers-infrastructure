# Caddy configuration for PWA with Push Notifications

yourdomain.com {
    # Enable HTTPS with automatic certificates
    tls admin@yourdomain.com
    
    # Security headers
    header {
        # Enable HSTS
        Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
        
        # Security headers
        X-Content-Type-Options "nosniff"
        X-Frame-Options "SAMEORIGIN"
        X-XSS-Protection "1; mode=block"
        Referrer-Policy "strict-origin-when-cross-origin"
        
        # PWA headers
        Service-Worker-Allowed "/"
        
        # Remove server header
        -Server
    }
    
    # Compression
    encode gzip zstd
    
    # Push API reverse proxy
    handle /push-api/* {
        uri strip_prefix /push-api
        reverse_proxy localhost:3011 {
            header_up X-Real-IP {remote_host}
            header_up X-Forwarded-Proto {scheme}
        }
    }
    
    # WebSocket support for real-time updates
    @websocket {
        header Connection *Upgrade*
        header Upgrade websocket
    }
    handle @websocket {
        reverse_proxy localhost:3011
    }
    
    # Service worker with correct MIME type
    handle /sw.js {
        header Content-Type "application/javascript"
        header Cache-Control "no-cache"
    }
    
    # Manifest with correct MIME type
    handle /manifest.json {
        header Content-Type "application/manifest+json"
    }
    
    # Cache static assets
    @static {
        path *.js *.css *.png *.jpg *.jpeg *.gif *.ico *.svg *.woff *.woff2
    }
    handle @static {
        header Cache-Control "public, max-age=31536000, immutable"
    }
    
    # Serve PWA files
    handle {
        root * /var/www/pwa
        try_files {path} /index.html
        file_server
    }
    
    # Logging
    log {
        output file /var/log/caddy/pwa.log
        format json
    }
}

# Redirect www to non-www
www.yourdomain.com {
    redir https://yourdomain.com{uri} permanent
}